# Pleasy uses the config here to work.
# Some variables are set from the context, eg the project name comes from the root folder name chosen at install.
# Database root user is in a separate file that is created when pl init is run. It is called mysql.cnf
# Drush aliases will also be automatically created when a site is installed. The alias is: @site
# Drupal console aliases are also created: @site.
#
# There are some global variables set
#  hosts_path: The hosts path
#  vhosts_path: The apache sites available
#  user: The current user (carlos is in honour of venerable Carlos Acutis)
#  host_database: mysql or mariadb
#  project: The project name will be worked out from the parent folder.
#  github:
#    user: Your github user name
#    key:  Your github key
#    email: The email you use for github. This is to provide your identity credentials when setting up git.
#  prod:
#    alias: The drush alias for your production server. Pleasy will set this alias up for you.
#    uri: Your production server URL
#    user: The production server user name
#    docroot: Full path on the production server to your drupal webroot
#
hosts_path: "/etc/hosts"
vhosts_path: "/etc/apache2/sites-available/"
www_path: "/var/www/oc"
user: root
host_database: mysql
github:
  user: githubuser
  key:  github
  email: myname@gmail.com
#plgit: ocback:/home/git/pleasy.git
plgit: https://github.com/mayostudio/pleasy.git
#prod:
#  alias: ctn
#  uri: "covidteachernetwork.org"
#  user: soph
#  docroot: "/var/www/covidteachernetwork.org/docroot"
#  test_uri: "test.covidteachernetwork.org"
#  test_docroot: "/var/www/test.covidteachernetwork.org/docroot"
#  method: tar
#  profile: varbase
#  alias: max
#  uri: "dontcriminalisefreespeech.org"
#  user: max
#  docroot: "/var/www/dontcriminaliseus.org/web"
#  test_uri: "test.dontcriminalisefreespeech.org"
#  test_docroot: "/var/www/test.dontcriminaliseus.org/web"
#  method: git
#  # Method could be git or tar.
#  # If method git, you will need to provide a git repo to use. A sanitised database may be stored in the repo.
#  gitrepo: ocback:dcfsfiles.git
#  gitkey: /home/puregift/.ssh/sa
#  #This is for a separate gitstored db. Locally it will be stored at proddb in sitebackups
#  gitdb: ssh://ocback:/home/git/dcfsdb.git
#
# RECIPES
# Recipes are the recipes for each site. The default is used for every site unless overwritten.
# There are some defaults which are not specified here such as database names.
# If no database information is given the following is used
# db: will be "siteproject" ie site name project name (root folder name), eg locpleasy
# dbuser: will be db
# dbpass: will be dbuser
#
# Just specifying a new site name is enough.
#
# The following settings are possible
# source: is the root folder by default opencourse-project. It will be used as the right most part of the URL. I suggest you build into oc instead.
# dev: Should this site have dev modules and settings installed.
# webroot: is the uppermost webroot folder, default is: docroot. Since this system can be used for other drupal distros, it could be web or html
# sitename: if not given, the sitename will be the name of the site. This is only used as part of the install process for the site header.
# auto: all prompts are given a yes by default
# apache: Is it an apache site. default is yes. ### Not sure if this is being used....
# profile: Which drupal profile to install. Normally it would be standard with drupal 8, varbase with varbase.
# uri: You can set the uri otherwise it is project.site, eg pleasy.loc
# install_method: git/composer/file. All three work.
# git_upstream: is used if the project is forked. Pleasy can update to upstream.
# theme: which theme to install
# theme_admin: which admin theme to install
# install_modules: which modules to install
# dev_modules: which dev modules to install for dev (or uninstall if making production)
# dev_composer: dev modules which need to be required by composer so the dev_modules will be able to be installed
# dev_composer is useful for d8 d9 since dev modules not set, but var and oc have dev modules already in composer.json
#
recipes:
  default:
    source: git@github.com:rjzaar/opencourse.git
    install_method: git
    theme: octheme_bs4
    theme_admin: vartheme_admin
    install_modules: oc_prod oc_content
    reinstall_modules: oc_prod  # recreate_block_from_config no longer needed since removed superfish! yeah!
    dev_modules: syslog views_ui block_place devel features_ui dblog
    # This is a special directive that will not load any defaults from the default recipe.
    # This is so in this case install_modules will remain blank
    default: n
    dev:  y
    profile: varbase
    webroot:  docroot
    #    sitename: default # leave blank it will be called the name of the site, eg loc
    auto:  y
    apache: y
    lando: n
  loc:
  stg:
    dev: n
  locl:
    lando: y
  localprod:
    dev:  n
  ins:
    source: git@github.com:rjzaar/opencourse.git
    install_modules: oc_prod oc_content
  bak:
  oc:
    source:  git@github.com:rjzaar/opencourse.git
    dev:  y
    profile: varbase
    webroot:  docroot
    #    sitename: default # leave blank it will be called the name of the site, eg loc
    auto:  y
    apache: y
    install_method: git
    git_upstream: git@github.com:Vardot/varbase-project.git
    theme: octheme_bs4
    theme_admin: octheme_admin
    install_modules: oc_prod
    dev_modules: oc_dev syslog views_ui block_place devel features_ui dblog search_kint twig_xdebug
    lando: n
    prod:
      alias: cathnet
      uri: "opencat.org"
      user: puregift
      docroot: "/var/www/opencat.org/docroot"
      test_uri: "test.opencat.org"
      test_docroot: "/var/www/test.opencat.org/docroot"
      method: tar
      # Method could be git or tar.
      # If method git, you will need to provide a git repo to use. A sanitised database may be stored in the repo.
      gitrepo: https://github.com/rjzaar/ocorg.git
      gitkey: /home/puregift/.ssh/github
      #This is for a separate gitstored db. Locally it will be stored at proddb in sitebackups
      gitdb: ssh://ocback:/home/git/proddb.git
  vadc:
    source: Vardot/varbase-project:~9
    install_method: composer
    theme: vartheme_bs4
    theme_admin: vartheme_admin
    install_modules:
    dev_modules: syslog views_ui block_place devel features_ui dblog
    default: n
    profile: varbase
    webroot: docroot
    prod:
      alias: ctn
      uri: "covidteachernetwork.org"
      user: soph
      docroot: "/var/www/covidteachernetwork.org/docroot"
      test_uri: "test.covidteachernetwork.org"
      test_docroot: "/var/www/test.covidteachernetwork.org/docroot"
      method: tar
      profile: varbase
      gitkey: ctn
  d9:
    source: https://www.drupal.org/download-latest/tar.gz
    install_method: file
    profile: standard
    webroot: docroot
    default: n
    auto: y
    apache: y
    dev_composer: devel features_ui
    dev_modules: syslog views_ui devel features_ui dblog
  d8:
    source: https://ftp.drupal.org/files/projects/drupal-8.9.0.tar.gz
    install_method: file
    profile: standard
    webroot: docroot
    default: n
    auto: y
    apache: y
    dev_composer: devel features_ui
    dev_modules: syslog views_ui devel features_ui dblog
  d8c:
    source: drupal/recommended-project:8.9.x
    install_method: composer
    profile: standard
    webroot: web
    default: n
    auto: y
    apache: y
    dev_composer: devel features_ui
    dev_modules: syslog views_ui block_place devel features_ui dblog
  tes:
  t1:
  t2:
    dev:  n
  t3:
    dev:  n
  t4:
    dev:  n
  st1:
  st2:
  varg:
    source: git@github.com:Vardot/varbase-project.git
    install_method: git
    theme: vartheme_bs4
    theme_admin: vartheme_admin
    install_modules:
    dev_modules: syslog views_ui block_place devel features_ui dblog
    # This is a special directive that will not load any defaults from the default recipe.
    # This is so in this case install_modules will remain blank
    default: n
  varc:
    source: vardot/varbase-project:^9.0.3
    install_method: composer
    theme: vartheme_bs4
    theme_admin: vartheme_admin
    install_modules:
    dev_modules: syslog views_ui block_place devel features_ui dblog
    default: n
  vard:
    source: vardot/varbase-project:8.8.x-dev
    install_method: composer
    dev: y
    theme: vartheme_bs4
    theme_admin: vartheme_admin
    install_modules:
    dev_modules: syslog views_ui block_place devel features_ui dblog
    default: n
  varl:
    source: vardot/varbase-project
    install_method: composer
    theme: vartheme_bs4
    theme_admin: vartheme_admin
    install_modules:
    dev_modules: syslog views_ui block_place devel features_ui dblog
    default: n
    lando: y
  guardr:
    install_method: composer
    theme: bartik
    default: n
    dev_modules: syslog views_ui block_place devel features_ui dblog
    webroot: web
    profile: standard
  cat:
    source:  git@github.com:rjzaar/opencourse.git
    dev:  y
    profile: varbase
    webroot:  docroot
    #    sitename: default # leave blank it will be called the name of the site, eg loc
    auto:  y
    apache: y
    install_method: git
    git_upstream: git@github.com:Vardot/varbase-project.git
    theme: octheme_bs4
    theme_admin: octheme_admin
    install_modules: oc_prod
    dev_modules: oc_dev syslog views_ui block_place devel features_ui dblog search_kint twig_xdebug
    lando: n
    prod:
      alias: opencat
      uri: "opencat.org"
      user: opencat
      docroot: "/var/www/opencat.org/docroot"
      test_uri: "test.opencat.org"
      test_docroot: "/var/www/test.opencat.org/docroot"
      method: tar
      # Method could be git or tar.
      # If method git, you will need to provide a git repo to use. A sanitised database may be stored in the repo.
      gitrepo: https://github.com/rjzaar/ocorg.git
      gitkey: /home/puregift/.ssh/github
      #This is for a separate gitstored db. Locally it will be stored at proddb in sitebackups
      gitdb: ssh://ocback:/home/git/proddb.git
  op:
    source: opigno/opigno-composer:^3.0
    install_method: composer
    dev_modules: syslog views_ui block_place devel features_ui dblog
    default: n
